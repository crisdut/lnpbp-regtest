FROM alpine:3.14 as bitcoin-builder

ARG SOURCE_CODE=https://github.com/crisdut/bitcoin.git
ARG BUILDER_SOURCE=/opt/src
ARG BUILDER_DIR=/opt/bitcoin
ARG BITCOIN_VERSION=v22.0

RUN apk add \
    autoconf \
    automake \
    boost-dev \
    build-base \
    sqlite-dev \
    chrpath \
    file \
    gnupg \
    libevent-dev \
    libressl \
    libtool \
    linux-headers \
    zeromq-dev \
    clang \
    wget \
    git

WORKDIR $BUILDER_DIR
WORKDIR $BUILDER_SOURCE
RUN git clone $SOURCE_CODE

WORKDIR $BUILDER_SOURCE/bitcoin
RUN git checkout $BITCOIN_VERSION

RUN ./autogen.sh
RUN ./configure \
    LDFLAGS=-L`ls -d /opt/db*`/lib/ CPPFLAGS=-I`ls -d /opt/db*`/include/ \
    # Enable Fuzz tests
    # CC=clang CXX=clang++ \
    # --enable-c++17 --enable-fuzz --with-sanitizers=address,fuzzer,undefined \
    --prefix=${BUILDER_DIR} \
    --mandir=/usr/share/man \
    --disable-tests \
    --disable-bench \
    --disable-ccache \
    --with-gui=no \
    --with-utils \
    --with-libs \
    --with-daemon \
    --with-sqlite \
    --without-bdb

RUN make -j "$(($(nproc)+1))"
RUN make install

FROM alpine:3.14 as lightning-builder
ARG SOURCE_CODE=https://github.com/crisdut/lightning.git
ARG BUILDER_SOURCE=/opt/src
ARG BUILDER_DIR=/opt/lightning
ARG LIGHTNING_VERSION=v0.10.2

WORKDIR $BUILDER_DIR
WORKDIR $BUILDER_SOURCE
RUN git clone $SOURCE_CODE

WORKDIR $BUILDER_SOURCE/lightning
RUN git checkout $LIGHTNING_VERSION
RUN git submodule update --init --recursive

RUN apk update
RUN apk add \
    ca-certificates \
    alpine-sdk \
    autoconf \
    automake \
    git \
    libtool \
    gmp-dev \
    sqlite-dev \
    python \
    python3 \
    py3-mako \
    net-tools \
    zlib-dev \
    libsodium \
    gettext

RUN pip3 install --upgrade pip
RUN pip3 install -r requiriments.lock

RUN ./configure --prefix=${BUILDER_DIR} --enable-static
RUN make
RUN make install